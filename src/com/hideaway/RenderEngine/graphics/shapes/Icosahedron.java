package com.hideaway.RenderEngine.graphics.shapes;

import com.hideaway.RenderEngine.graphics.coordinates.Mesh;
import com.hideaway.RenderEngine.graphics.coordinates.Triangle;
import com.hideaway.RenderEngine.graphics.coordinates.Vertex;

public class Icosahedron {
    private static final Mesh icoMesh = new Mesh();

    public static double[][] vertices = {
            {0.1024f, -0.9435f, 0.3151f},
            {0.7002f, -0.6617f, 0.2680f},
            {-0.2680f, -0.9435f, 0.1947f},
            {-0.2680f, -0.9435f, -0.1947f},
            {0.1024f, -0.9435f, -0.3151f},
            {0.9050f, -0.3304f, 0.2680f},
            {0.0247f, -0.3304f, 0.9435f},
            {-0.8897f, -0.3304f, 0.3151f},
            {-0.5746f, -0.3304f, -0.7488f},
            {0.5346f, -0.3304f, -0.7779f},
            {0.8026f, -0.1256f, 0.5831f},
            {-0.3066f, -0.1256f, 0.9435f},
            {-0.9921f, -0.1256f, 0.0000f},
            {-0.3066f, -0.1256f, -0.9435f},
            {0.8026f, -0.1256f, -0.5831f},
            {0.4089f, 0.6617f, 0.6284f},
            {-0.4713f, 0.6617f, 0.5831f},
            {-0.7002f, 0.6617f, -0.2680f},
            {0.0385f, 0.6617f, -0.7488f},
            {0.7240f, 0.6617f, -0.1947f},
            {0.2680f, 0.9435f, -0.1947f},
            {0.4911f, 0.7947f, -0.3568f},
            {0.4089f, 0.6617f, -0.6284f},
            {-0.1024f, 0.9435f, -0.3151f},
            {-0.1876f, 0.7947f, -0.5773f},
            {-0.4713f, 0.6617f, -0.5831f},
            {-0.3313f, 0.9435f, 0.0000f},
            {-0.6071f, 0.7947f, 0.0000f},
            {-0.7002f, 0.6617f, 0.2680f},
            {-0.1024f, 0.9435f, 0.3151f},
            {-0.1876f, 0.7947f, 0.5773f},
            {0.0385f, 0.6617f, 0.7488f},
            {0.2680f, 0.9435f, 0.1947f},
            {0.4911f, 0.7947f, 0.3568f},
            {0.7240f, 0.6617f, 0.1947f},
            {0.8897f, 0.3304f, -0.3151f},
            {0.7947f, 0.1876f, -0.5773f},
            {0.5746f, 0.3304f, -0.7488f},
            {-0.0247f, 0.3304f, -0.9435f},
            {-0.3035f, 0.1876f, -0.9342f},
            {-0.5346f, 0.3304f, -0.7779f},
            {-0.9050f, 0.3304f, -0.2680f},
            {-0.9822f, 0.1876f, 0.0000f},
            {-0.9050f, 0.3304f, 0.2680f},
            {-0.5346f, 0.3304f, 0.7779f},
            {-0.3035f, 0.1876f, 0.9342f},
            {-0.0247f, 0.3304f, 0.9435f},
            {0.5746f, 0.3304f, 0.7488f},
            {0.7947f, 0.1876f, 0.5773f},
            {0.8897f, 0.3304f, 0.3151f},
            {0.3066f, 0.1256f, -0.9435f},
            {0.3035f, -0.1876f, -0.9342f},
            {0.0247f, -0.3304f, -0.9435f},
            {-0.8026f, 0.1256f, -0.5831f},
            {-0.7947f, -0.1876f, -0.5773f},
            {-0.8897f, -0.3304f, -0.3151f},
            {-0.8026f, 0.1256f, 0.5831f},
            {-0.7947f, -0.1876f, 0.5773f},
            {-0.5746f, -0.3304f, 0.7488f},
            {0.3066f, 0.1256f, 0.9435f},
            {0.3035f, -0.1876f, 0.9342f},
            {0.5346f, -0.3304f, 0.7779f},
            {0.9921f, 0.1256f, 0.0000f},
            {0.9822f, -0.1876f, 0.0000f},
            {0.9050f, -0.3304f, -0.2680f},
            {0.4713f, -0.6617f, -0.5831f},
            {0.1876f, -0.7947f, -0.5773f},
            {-0.0385f, -0.6617f, -0.7488f},
            {-0.4089f, -0.6617f, -0.6284f},
            {-0.4911f, -0.7947f, -0.3568f},
            {-0.7240f, -0.6617f, -0.1947f},
            {-0.7240f, -0.6617f, 0.1947f},
            {-0.4911f, -0.7947f, 0.3568f},
            {-0.4089f, -0.6617f, 0.6284f},
            {0.7002f, -0.6617f, -0.2680f},
            {0.6071f, -0.7947f, 0.0000f},
            {0.3313f, -0.9435f, 0.0000f},
            {-0.0385f, -0.6617f, 0.7488f},
            {0.1876f, -0.7947f, 0.5773f},
            {0.4713f, -0.6617f, 0.5831f},
            {0.4713f, -0.6617f, 0.5831f}, // temp fix


            {0.000000f, -2.500000f, 0.000000f},
            {1.809018f, -1.118049f, 1.314313f},
            {-0.690970f, -1.118050f, 2.126623f},
            {-2.236066f, -1.118039f, 0.000000f},
            {-0.690970f, -1.118050f, -2.126623f},
            {1.809018f, -1.118049f, -1.314313f},
            {0.690970f, 1.118050f, 2.126623f},
            {-1.809018f, 1.118049f, 1.314313f},
            {-1.809018f, 1.118049f, -1.314313f},
            {0.690970f, 1.118050f, -2.126623f},
            {2.236066f, 1.118039f, 0.000000f},
            {0.000000f, 2.500000f, 0.000000f},
            {-0.406139f, -2.126636f, 1.249988f},
            {1.063307f, -2.126636f, 0.772529f},
            {0.657172f, -1.314344f, 2.022529f},
            {2.126620f, -1.314340f, 0.000000f},
            {1.063307f, -2.126636f, -0.772529f},
            {-1.314324f, -2.126629f, 0.000000f},
            {-1.720474f, -1.314341f, 1.249992f},
            {-0.406139f, -2.126636f, -1.249988f},
            {-1.720474f, -1.314341f, -1.249992f},
            {0.657172f, -1.314344f, -2.022529f},
            {2.377645f, 0.000000f, 0.772532f},
            {2.377645f, 0.000000f, -0.772532f},
            {0.000000f, 0.000000f, 2.500000f},
            {1.469464f, 0.000000f, 2.022542f},
            {-2.377645f, 0.000000f, 0.772532f},
            {-1.469464f, 0.000000f, 2.022542f},
            {-1.469464f, 0.000000f, -2.022542f},
            {-2.377645f, 0.000000f, -0.772532f},
            {1.469464f, 0.000000f, -2.022542f},
            {0.000000f, 0.000000f, -2.500000f},
            {1.720474f, 1.314341f, 1.249992f},
            {-0.657172f, 1.314344f, 2.022529f},
            {-2.126620f, 1.314340f, 0.000000f},
            {-0.657172f, 1.314344f, -2.022529f},
            {1.720474f, 1.314341f, -1.249992f},
            {0.406139f, 2.126636f, 1.249988f},
            {1.314324f, 2.126629f, 0.000000f},
            {-1.063307f, 2.126636f, 0.772529f},
            {-1.063307f, 2.126636f, -0.772529f},
            {0.406139f, 2.126636f, -1.249988f}
    };

    /**
     * This method returns the Mesh of the cube, which was specified in the nested array of vertices "vertices". This method acts
     * as an assembler of the nested array "vertices" into a Mesh object.
     * @return the mesh of the cube.
     * @see Mesh
     * */
    public static Mesh getMesh() {
        for(int i = 0; i < vertices.length; i+= 3){
            Triangle tri = new Triangle(new Vertex(vertices[i]), new Vertex(vertices[i+1]), new Vertex(vertices[i+2]));
            icoMesh.add(tri);
        }
        return getIcoMesh();
    }

    private static Mesh getIcoMesh(){
        return icoMesh;
    }
}